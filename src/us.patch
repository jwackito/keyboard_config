--- /usr/share/X11/xkb/symbols/us	2025-03-03 10:09:24.068518090 -0300
+++ ../symbols/us	2025-03-03 10:05:24.156110390 -0300
@@ -1,67 +1,125 @@
-default  partial alphanumeric_keys modifier_keys
+// Keyboard layouts for the United States of America.
+
+default partial alphanumeric_keys modifier_keys
 xkb_symbols "basic" {
 
     name[Group1]= "English (US)";
 
-    key <TLDE> {	[     grave,	asciitilde	]	};
-    key <AE01> {	[	  1,	exclam 		]	};
-    key <AE02> {	[	  2,	at		]	};
-    key <AE03> {	[	  3,	numbersign	]	};
-    key <AE04> {	[	  4,	dollar		]	};
-    key <AE05> {	[	  5,	percent		]	};
-    key <AE06> {	[	  6,	asciicircum	]	};
-    key <AE07> {	[	  7,	ampersand	]	};
-    key <AE08> {	[	  8,	asterisk	]	};
-    key <AE09> {	[	  9,	parenleft	]	};
-    key <AE10> {	[	  0,	parenright	]	};
-    key <AE11> {	[     minus,	underscore	]	};
-    key <AE12> {	[     equal,	plus		]	};
+    key <TLDE>	{[   grave,	 asciitilde	]};
+    key <AE01>	{[	 1,	 exclam		]};
+    key <AE02>	{[	 2,	 at		]};
+    key <AE03>	{[	 3,	 numbersign	]};
+    key <AE04>	{[	 4,	 dollar		]};
+    key <AE05>	{[	 5,	 percent	]};
+    key <AE06>	{[	 6,	 asciicircum	]};
+    key <AE07>	{[	 7,	 ampersand	]};
+    key <AE08>	{[	 8,	 asterisk	]};
+    key <AE09>	{[	 9,	 parenleft	]};
+    key <AE10>	{[	 0,	 parenright	]};
+    key <AE11>	{[   minus,	 underscore	]};
+    key <AE12>	{[   equal,	 plus		]};
+
+    key <AD01>	{[	 q,	 Q		]};
+    key <AD02>	{[	 w,	 W		]};
+    key <AD03>	{[	 e,	 E		]};
+    key <AD04>	{[	 r,	 R		]};
+    key <AD05>	{[	 t,	 T		]};
+    key <AD06>	{[	 y,	 Y		]};
+    key <AD07>	{[	 u,	 U		]};
+    key <AD08>	{[	 i,	 I		]};
+    key <AD09>	{[	 o,	 O		]};
+    key <AD10>	{[	 p,	 P		]};
+    key <AD11>	{[ bracketleft,	 braceleft	]};
+    key <AD12>	{[ bracketright, braceright	]};
+
+    key <AC01>	{[	 a,	 A		]};
+    key <AC02>	{[	 s,	 S		]};
+    key <AC03>	{[	 d,	 D		]};
+    key <AC04>	{[	 f,	 F		]};
+    key <AC05>	{[	 g,	 G		]};
+    key <AC06>	{[	 h,	 H		]};
+    key <AC07>	{[	 j,	 J		]};
+    key <AC08>	{[	 k,	 K		]};
+    key <AC09>	{[	 l,	 L		]};
+    key <AC10>	{[ semicolon,	 colon		]};
+    key <AC11>	{[ apostrophe,	 quotedbl	]};
+    key <BKSL>	{[ backslash,	 bar		]};
+
+    key <AB01>	{[	 z,	 Z		]};
+    key <AB02>	{[	 x,	 X		]};
+    key <AB03>	{[	 c,	 C		]};
+    key <AB04>	{[	 v,	 V		]};
+    key <AB05>	{[	 b,	 B		]};
+    key <AB06>	{[	 n,	 N		]};
+    key <AB07>	{[	 m,	 M		]};
+    key <AB08>	{[   comma,	 less		]};
+    key <AB09>	{[  period,	 greater	]};
+    key <AB10>	{[   slash,	 question	]};
+};
 
-    key <AD01> {	[	  q,	Q 		]	};
-    key <AD02> {	[	  w,	W		]	};
-    key <AD03> {	[	  e,	E		]	};
-    key <AD04> {	[	  r,	R		]	};
-    key <AD05> {	[	  t,	T		]	};
-    key <AD06> {	[	  y,	Y		]	};
-    key <AD07> {	[	  u,	U		]	};
-    key <AD08> {	[	  i,	I		]	};
-    key <AD09> {	[	  o,	O		]	};
-    key <AD10> {	[	  p,	P		]	};
-    key <AD11> {	[ bracketleft,	braceleft	]	};
-    key <AD12> {	[ bracketright,	braceright	]	};
 
-    key <AC01> {	[	  a,	A 		]	};
-    key <AC02> {	[	  s,	S		]	};
-    key <AC03> {	[	  d,	D		]	};
-    key <AC04> {	[	  f,	F		]	};
-    key <AC05> {	[	  g,	G		]	};
-    key <AC06> {	[	  h,	H		]	};
-    key <AC07> {	[	  j,	J		]	};
-    key <AC08> {	[	  k,	K		]	};
-    key <AC09> {	[	  l,	L		]	};
-    key <AC10> {	[ semicolon,	colon		]	};
-    key <AC11> {	[ apostrophe,	quotedbl	]	};
+partial alphanumeric_keys
+xkb_symbols "uses" {
 
-    key <AB01> {	[	  z,	Z 		]	};
-    key <AB02> {	[	  x,	X		]	};
-    key <AB03> {	[	  c,	C		]	};
-    key <AB04> {	[	  v,	V		]	};
-    key <AB05> {	[	  b,	B		]	};
-    key <AB06> {	[	  n,	N		]	};
-    key <AB07> {	[	  m,	M		]	};
-    key <AB08> {	[     comma,	less		]	};
-    key <AB09> {	[    period,	greater		]	};
-    key <AB10> {	[     slash,	question	]	};
+    include "us(basic)"
+    name[Group1]= "US (Spanish variant for coding with caron)";
+    key <TLDE> {[       apostrophe,     acute,  grave, degree ]};
+    key <AE01> {[       1,      exclam,         bar                  ]};
+    key <AE02> {[       2,      quotedbl,       at                 ]};
+    key <AE03> {[       3,      numbersign,     EuroSign            ]};
+    key <AE05> {[	5,	percent	]};
+    key <AE06> {[       6,      dead_circumflex, notsign     ]       };
+    key <AE07> {[       7,      dead_caron,          ampersand             ]};
+    key <AE11> {[   	minus,	 underscore, 	plus	]};
+    key <AE12> {[   	plus,	 equal, equal		]};
+    key <AC10> {[       ntilde,         Ntilde,         asciitilde ] };
+    key <AC11> {[       dead_acute,     dead_diaeresis, dead_caron] };
+    key <BKSL> {[ 	backslash,    	bar            ]};
+    key <AB08> {[       comma,          semicolon,      less            ]       };
+    key <AB09> {[       period,         colon,          greater         ]       };
+    
+    key <AD01> {[         q,    Q,      at              ]};
+    key <AD03> {[         e,    E,      Greek_epsilon,  Greek_EPSILON           ]       };
+    key <AD04> {[         r,    R,      Greek_rho,      Greek_RHO               ]       };
+    key <AD05> {[         t,    T,      Greek_tau,      Greek_TAU               ]       };
+    key <AD06> {[         y,    Y,      Greek_upsilon,  Greek_UPSILON           ]       };
+    key <AD07> {[         u,    U,      Greek_theta,    Greek_THETA             ]       };
+    key <AD08> {[         i,    I,      Greek_iota,     Greek_IOTA              ]       };
+    key <AD09> {[         o,    O,      Greek_omicron,  Greek_OMICRON           ]       };
+    key <AD10> {[         p,    P,      Greek_pi,       Greek_PI                ]       };
+
+    key <AC01> {[         a,    A,      Greek_alpha,    Greek_ALPHA     ]       };
+    key <AC02> {[         s,    S,      Greek_sigma,    Greek_SIGMA             ]       };
+    key <AC03> {[         d,    D,      Greek_delta,    Greek_DELTA             ]       };
+    key <AC04> {[         f,    F,      Greek_phi,      Greek_PHI               ]       };
+    key <AC05> {[         g,    G,      Greek_gamma,    Greek_GAMMA             ]       };
+    key <AC06> {[         h,    H,      Greek_eta,      Greek_ETA              ]       };
+    key <AC07> {[         j,    J,      Greek_xi,       Greek_XI                ]       };
+    key <AC08> {[         k,    K,      Greek_kappa,    Greek_KAPPA                     ]       };
+    key <AC09> {[         l,    L,      Greek_lamda,    Greek_LAMDA             ]       };
+    
+    key <AB01> {[         z,    Z,      Greek_zeta,     Greek_ZETA              ]       };
+    key <AB02> {[         x,    X,      Greek_chi,      Greek_CHI       ]       };
+    key <AB03> {[         c,    C,      Greek_psi,      Greek_PSI       ]       };
+    key <AB04> {[         v,    V,      Greek_omega,    Greek_OMEGA             ]       };
+    key <AB05> {[         b,    B,      Greek_beta,     Greek_BETA      ]       };
+    key <AB06> {[         n,    N,      Greek_nu,       Greek_NU        ]       };
+    key <AB07> {[         m,    M,      Greek_mu,       Greek_MU        ]       };
+    key <AB10> {[     	  slash,   question,  questiondown,         dead_cedilla] };
 
-    key <BKSL> {	[ backslash,         bar	]	};
+
+    include "level3(ralt_switch)"
 };
 
+
 partial alphanumeric_keys
 xkb_symbols "euro" {
 
     include "us(basic)"
     name[Group1]= "English (US, euro on 5)";
 
+    key <LSGT> {	[ backslash,         bar	]	};
+
     include "eurosign(5)"
 
     include "level3(ralt_switch)"
@@ -76,15 +134,14 @@
 
     key <AB08> {        [     comma,    comma      ]       };
     key <AB09> {        [    period,    period     ]       };
-    key <BKSL> {        [ quoteleft,    asciitilde ]       };
+    key <BKSL> {        [     grave,    asciitilde ]       };
     key <LSGT> {        [ backslash,    bar        ]       };
-    key <TLDE> {        [ leftcaret,    rightcaret ]       };
+    key <TLDE> {        [      less,    greater    ]       };
 };
 
 partial alphanumeric_keys
 xkb_symbols "intl" {
 
-    include "us(basic)"
     name[Group1]= "English (US, intl., with dead keys)";
 
     key <TLDE> { [dead_grave, dead_tilde,         grave,       asciitilde ] };
@@ -104,7 +161,7 @@
     key <AD01> { [	   q,          Q,    adiaeresis,       Adiaeresis ] };
     key <AD02> { [	   w,          W,         aring,            Aring ] };
     key <AD03> { [	   e,          E,        eacute,           Eacute ] };
-    key <AD04> { [	   r,          R,    registered,       registered ] };
+    key <AD04> { [	   r,          R,    registered,        trademark ] };
     key <AD05> { [	   t,          T,         thorn,            THORN ] };
     key <AD06> { [	   y,          Y,    udiaeresis,       Udiaeresis ] };
     key <AD07> { [	   u,          U,        uacute,           Uacute ] };
@@ -117,23 +174,22 @@
     key <AC01> { [	   a,          A,        aacute,           Aacute ] };
     key <AC02> { [	   s,          S,        ssharp,          section ] };
     key <AC03> { [	   d,          D,           eth,              ETH ] };
-    key <AC04> { [	   f,          F,             f,                F ] };
+    key <AC04> { [	   f,          F,    ediaeresis,       Ediaeresis ] };
     key <AC05> { [	   g,          G,             g,                G ] };
     key <AC06> { [	   h,          H,             h,                H ] };
-    key <AC07> { [	   j,          J,             j,                J ] };
+    key <AC07> { [	   j,          J,    idiaeresis,       Idiaeresis ] };
     key <AC08> { [	   k,          K,            oe,               OE ] };
-
-    key <AC09> { [	   l,          L,        oslash,         Ooblique ] };
+    key <AC09> { [	   l,          L,        oslash,           Oslash ] };
     key <AC10> { [ semicolon,      colon,     paragraph,           degree ] };
     key <AC11> { [dead_acute, dead_diaeresis, apostrophe,        quotedbl ] };
 
     key <AB01> { [	   z,          Z,            ae,               AE ] };
-    key <AB02> { [	   x,          X,             x,                X ] };
+    key <AB02> { [	   x,          X, periodcentered,     dead_stroke ] };
     key <AB03> { [	   c,          C,     copyright,             cent ] };
     key <AB04> { [	   v,          V,             v,                V ] };
     key <AB05> { [	   b,          B,             b,                B ] };
     key <AB06> { [	   n,          N,        ntilde,           Ntilde ] };
-    key <AB07> { [	   m,          M,            mu,               mu ] };
+    key <AB07> { [	   m,          M,            mu,        plusminus ] };
     key <AB08> { [     comma,       less,      ccedilla,         Ccedilla ] };
     key <AB09> { [    period,    greater, dead_abovedot,       dead_caron ] };
     key <AB10> { [     slash,   question,  questiondown,        dead_hook ] };
@@ -190,74 +246,71 @@
   key <AC10> { [  semicolon, colon,	     dead_ogonek,   dead_diaeresis  ] };
   key <AC11> { [ dead_acute, dead_diaeresis, apostrophe,    quotedbl	    ] };
 
+  key <AB02> { [	  x, X,              periodcentered, dead_stroke    ] };
   key <AB08> { [      comma, less,	     dead_cedilla,  dead_caron	    ] };
   key <AB09> { [     period, greater,	     dead_abovedot, dead_circumflex ] };
-  key <AB10> { [      slash, question,	     dead_hook,	    dead_hook	    ] };
+  key <AB10> { [      slash, question,	     dead_hook,     dead_hook	    ] };
 
   key <LSGT> { [ backslash,   bar,            backslash,      bar ] };
 
   include "level3(ralt_switch)"
 };
 
-// based on a keyboard map from an 'xkb/symbols/dk' file
-
 partial alphanumeric_keys
 xkb_symbols "dvorak" {
 
     name[Group1]= "English (Dvorak)";
 
-    key <TLDE> { [       grave,	asciitilde, dead_grave, dead_tilde	] };
-
-    key <AE01> { [	    1,	exclam 		]	};
-    key <AE02> { [	    2,	at		]	};
-    key <AE03> { [	    3,	numbersign	]	};
-    key <AE04> { [	    4,	dollar		]	};
-    key <AE05> { [	    5,	percent		]	};
-    key <AE06> { [	    6,	asciicircum, dead_circumflex, dead_circumflex ]	};
-    key <AE07> { [	    7,	ampersand	]	};
-    key <AE08> { [	    8,	asterisk	]	};
-    key <AE09> { [	    9,	parenleft,  dead_grave]	};
-    key <AE10> { [	    0,	parenright	]	};
-    key <AE11> { [ bracketleft,	braceleft	]	};
-    key <AE12> { [ bracketright, braceright,  dead_tilde] };
-
-    key <AD01> { [  apostrophe,	quotedbl, dead_acute, dead_diaeresis	] };
-    key <AD02> { [	comma,	less,   dead_cedilla, dead_caron	] };
-    key <AD03> { [      period,	greater, dead_abovedot, periodcentered	] };
-    key <AD04> { [	    p,	P		]	};
-    key <AD05> { [	    y,	Y		]	};
-    key <AD06> { [	    f,	F		]	};
-    key <AD07> { [	    g,	G		]	};
-    key <AD08> { [	    c,	C		]	};
-    key <AD09> { [	    r,	R		]	};
-    key <AD10> { [	    l,	L		]	};
-    key <AD11> { [	slash,	question	]	};
-    key <AD12> { [	equal,	plus		]	};
-
-    key <AC01> { [	    a,	A 		]	};
-    key <AC02> { [	    o,	O		]	};
-    key <AC03> { [	    e,	E		]	};
-    key <AC04> { [	    u,	U		]	};
-    key <AC05> { [	    i,	I		]	};
-    key <AC06> { [	    d,	D		]	};
-    key <AC07> { [	    h,	H		]	};
-    key <AC08> { [	    t,	T		]	};
-    key <AC09> { [	    n,	N		]	};
-    key <AC10> { [	    s,	S		]	};
-    key <AC11> { [	minus,	underscore	]	};
-
-    key <AB01> { [   semicolon,	colon, dead_ogonek, dead_doubleacute ] };
-    key <AB02> { [	    q,	Q		]	};
-    key <AB03> { [	    j,	J		]	};
-    key <AB04> { [	    k,	K		]	};
-    key <AB05> { [	    x,	X		]	};
-    key <AB06> { [	    b,	B		]	};
-    key <AB07> { [	    m,	M		]	};
-    key <AB08> { [	    w,	W		]	};
-    key <AB09> { [	    v,	V		]	};
-    key <AB10> { [	    z,	Z		]	};
-
-    key <BKSL> { [  backslash,  bar             ]       };
+    key <TLDE>	{[     grave,    asciitilde,    dead_grave,  dead_tilde ]};
+    key <AE01>	{[         1,    exclam     ]};
+    key <AE02>	{[         2,    at         ]};
+    key <AE03>	{[         3,    numbersign ]};
+    key <AE04>	{[         4,    dollar     ]};
+    key <AE05>	{[         5,    percent    ]};
+    key <AE06>	{[         6,    asciicircum,   dead_circumflex,  dead_circumflex ]};
+    key <AE07>	{[         7,    ampersand  ]};
+    key <AE08>	{[         8,    asterisk   ]};
+    key <AE09>	{[         9,    parenleft,     dead_grave,  dead_breve ]};
+    key <AE10>	{[         0,    parenright ]};
+    key <AE11>	{[ bracketleft,  braceleft  ]};
+    key <AE12>	{[bracketright,  braceright,    dead_tilde]};
+
+    key <AD01>	{[apostrophe,    quotedbl,      dead_acute,  dead_diaeresis ]};
+    key <AD02>	{[     comma,    less,          dead_cedilla,  dead_caron ]};
+    key <AD03>	{[    period,    greater,       dead_abovedot,  periodcentered ]};
+    key <AD04>	{[         p,    P          ]};
+    key <AD05>	{[         y,    Y          ]};
+    key <AD06>	{[         f,    F          ]};
+    key <AD07>	{[         g,    G          ]};
+    key <AD08>	{[         c,    C          ]};
+    key <AD09>	{[         r,    R          ]};
+    key <AD10>	{[         l,    L          ]};
+    key <AD11>	{[     slash,    question   ]};
+    key <AD12>	{[     equal,    plus       ]};
+
+    key <AC01>	{[         a,    A          ]};
+    key <AC02>	{[         o,    O          ]};
+    key <AC03>	{[         e,    E          ]};
+    key <AC04>	{[         u,    U          ]};
+    key <AC05>	{[         i,    I          ]};
+    key <AC06>	{[         d,    D          ]};
+    key <AC07>	{[         h,    H          ]};
+    key <AC08>	{[         t,    T          ]};
+    key <AC09>	{[         n,    N          ]};
+    key <AC10>	{[	   s,    S          ]};
+    key <AC11>	{[     minus,    underscore ]};
+    key <BKSL>	{[ backslash,    bar        ]};
+
+    key <AB01>	{[ semicolon,    colon,         dead_ogonek,  dead_doubleacute ]};
+    key <AB02>	{[         q,    Q          ]};
+    key <AB03>	{[         j,    J          ]};
+    key <AB04>	{[         k,    K          ]};
+    key <AB05>	{[         x,    X          ]};
+    key <AB06>	{[         b,    B          ]};
+    key <AB07>	{[         m,    M          ]};
+    key <AB08>	{[         w,    W          ]};
+    key <AB09>	{[         v,    V          ]};
+    key <AB10>	{[         z,    Z          ]};
 };
 
 // Dvorak intl., with dead keys
@@ -267,7 +320,6 @@
 partial alphanumeric_keys
 xkb_symbols "dvorak-intl" {
 
-    include "us(dvorak)"
     name[Group1]= "English (Dvorak, intl., with dead keys)";
 
     key <TLDE> { [dead_grave, dead_tilde,         grave,       asciitilde ] };
@@ -290,13 +342,13 @@
     key <AD03> { [    period,    greater, dead_abovedot,       dead_caron ] };
     key <AD04> { [	   p,          P,    odiaeresis,       Odiaeresis ] };
     key <AD05> { [	   y,          Y,    udiaeresis,       Udiaeresis ] };
-    // key <AD06> { [	   f,	F		]	};
-    // key <AD07> { [	   g,	G		]	};
+    key <AD06> { [	   f,          F,    ediaeresis,       Ediaeresis ] };
+    key <AD07> { [	   g,          G,             g,                G ] };
     key <AD08> { [	   c,          C,     copyright,             cent ] };
-    key <AD09> { [	   r,          R,    registered,       registered ] };
-    key <AD10> { [	   l,          L,        oslash,         Ooblique ] };
+    key <AD09> { [	   r,          R,    registered,        trademark ] };
+    key <AD10> { [	   l,          L,        oslash,           Oslash ] };
     key <AD11> { [     slash,   question,  questiondown,        dead_hook ] };
-    // key <AD12> { [     equal,       plus,      multiply,         division ] };
+    key <AD12> { [     equal,       plus,      multiply,         division ] };
 
     key <AC01> { [	   a,          A,        aacute,           Aacute ] };
     key <AC02> { [	   o,          O,        oacute,           Oacute ] };
@@ -304,25 +356,26 @@
     key <AC04> { [	   u,          U,        uacute,           Uacute ] };
     key <AC05> { [	   i,          I,        iacute,           Iacute ] };
     key <AC06> { [	   d,          D,           eth,              ETH ] };
-    // key <AC07> { [	   h,	H		]	};
+    key <AC07> { [	   h,          H,             h,                H ] };
     key <AC08> { [	   t,          T,         thorn,            THORN ] };
     key <AC09> { [	   n,          N,        ntilde,           Ntilde ] };
     key <AC10> { [	   s,          S,        ssharp,          section ] };
-    // key <AC11> { [     minus, underscore,           yen,    dead_belowdot ] };
+    key <AC11> { [     minus, underscore,           yen,    dead_belowdot ] };
 
     key <AB01> { [ semicolon,      colon,     paragraph,           degree ] };
     key <AB02> { [	   q,          Q,    adiaeresis,       Adiaeresis ] };
-    // key <AB03> { [	   j,	J		]	};
+    key <AB03> { [	   j,          J,    idiaeresis,       Idiaeresis ] };
     key <AB04> { [	   k,          K,            oe,               OE ] };
-    // key <AB05> { [	   x,	X		]	};
-    // key <AB06> { [	   b,	B		]	};
-    key <AB07> { [	   m,          M,            mu,               mu ] };
+    key <AB05> { [	   x,          X, periodcentered,     dead_stroke ] };
+    key <AB06> { [	   b,          B,             b,                B ] };
+    key <AB07> { [	   m,          M,            mu,        plusminus ] };
     key <AB08> { [	   w,          W,         aring,            Aring ] };
-    // key <AB09> { [	   v,	V		]	};
+    key <AB09> { [	   v,          V,             v,                V ] };
     key <AB10> { [	   z,          Z,            ae,               AE ] };
-
     key <BKSL> { [ backslash,        bar,       notsign,        brokenbar ] };
 
+    key <LSGT> { [ backslash,   bar,            backslash,      bar ] };
+
     include "level3(ralt_switch)"
 };
 
@@ -351,7 +404,7 @@
     key <AE04> { [         4,  dollar,    EuroSign ] };
 
     key <AD02> { [     comma,    less,  adiaeresis,       dead_caron ] };
-    key <AD03> { [    period, greater, ecircumflex,   periodcentered	] };
+    key <AD03> { [    period, greater, ecircumflex,   periodcentered ] };
     key <AD04> { [         p,       P,  ediaeresis,     dead_cedilla ] };
     key <AD05> { [         y,       Y,  udiaeresis ] };
     key <AD08> { [         c,       C,    ccedilla,    dead_abovedot ] };
@@ -367,7 +420,7 @@
     key <AB02> { [         q,       Q,  odiaeresis,      dead_ogonek ] };
     key <AB03> { [         j,       J,      egrave, dead_doubleacute ] };
     key <AB04> { [         k,       K,      ugrave ] };
-    key <AB05> { [         x,       X,  idiaeresis ] };
+    key <AB05> { [         x,       X,  idiaeresis,      dead_stroke ] };
 
     include "level3(ralt_switch)"
 };
@@ -578,7 +631,6 @@
     key <AE10> { [ bracketright,    6                                           ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };
     key <AE11> { [ exclam,          8,              exclamdown,      U2E18      ], type[Group1] = "FOUR_LEVEL_ALPHABETIC" };  // reversed interrobang
     key <AE12> { [ numbersign,      grave,          dead_grave                  ] };
-    key <BKSP> { [ BackSpace,       BackSpace                                   ] };
 
     // upper row, left side
     key <AD01> { [ semicolon,       colon,          dead_diaeresis              ] };
@@ -595,7 +647,7 @@
 
     // home row, left side
     key <AC01> { [ a,               A,              aring,           Aring      ] };
-    key <AC02> { [ o,               O,              oslash,          Ooblique   ] };
+    key <AC02> { [ o,               O,              oslash,          Oslash     ] };
     key <AC03> { [ e,               E,              ae,              AE         ] };
     key <AC04> { [ u,               U,              eacute,          Eacute     ] };
 
@@ -615,57 +667,116 @@
     //include "level3(ralt_switch)"
 };
 
-// phonetic layout for Russian letters on an US keyboard
-// by Ivan Popov <pin@konvalo.org> 2005-07-17
+// Macintosh dvorak keyboard layout
+// Based on the Dvorak keyboard layout found in MacOS
+partial alphanumeric_keys
+xkb_symbols "dvorak-mac" {
+    name[Group1]= "English (Dvorak, Macintosh)";
+
+    key <TLDE> { [ grave, asciitilde, dead_grave, grave ] };
+
+    key <AE01> { [            1,      exclam,          exclamdown,                U2044 ] };
+    key <AE02> { [            2,          at,           trademark,             EuroSign ] };
+    key <AE03> { [            3,  numbersign,            sterling,                U2039 ] };
+    key <AE04> { [            4,      dollar,                cent,                U203A ] };
+    key <AE05> { [            5,     percent,            infinity,                UFB01 ] };
+    key <AE06> { [            6, asciicircum,             section,                UFB02 ] };
+    key <AE07> { [            7,   ampersand,           paragraph,         doubledagger ] };
+    key <AE08> { [            8,    asterisk,  enfilledcircbullet,               degree ] };
+    key <AE09> { [            9,   parenleft,         ordfeminine,       periodcentered ] };
+    key <AE10> { [            0,  parenright,           masculine,   singlelowquotemark ] };
+    key <AE11> { [  bracketleft,   braceleft, leftdoublequotemark, rightdoublequotemark ] };
+    key <AE12> { [ bracketright,  braceright, leftsinglequotemark, rightsinglequotemark ] };
+
+    key <AD01> { [ apostrophe,  quotedbl,               ae,           AE ] };
+    key <AD02> { [      comma,      less,    lessthanequal,       macron ] };
+    key <AD03> { [     period,   greater, greaterthanequal,        breve ] };
+    key <AD04> { [          p,         P,         Greek_pi,        U220F ] };
+    key <AD05> { [          y,         Y,              yen,       Aacute ] };
+    key <AD06> { [          f,         F,         function,   Idiaeresis ] };
+    key <AD07> { [          g,         G,        copyright,  doubleacute ] };
+    key <AD08> { [          c,         C,         ccedilla,     Ccedilla ] };
+    key <AD09> { [          r,         R,       registered,     permille ] };
+    key <AD10> { [          l,         L,          notsign,       Ograve ] };
+    key <AD11> { [      slash,  question,         division, questiondown ] };
+    key <AD12> { [      equal,      plus,         notequal,    plusminus ] };
+
+    key <AC01> { [     a,          A,             aring,       Aring ] };
+    key <AC02> { [     o,          O,            oslash,      Oslash ] };
+    key <AC03> { [     e,          E,        dead_acute,       acute ] };
+    key <AC04> { [     u,          U,    dead_diaeresis,   diaeresis ] };
+    key <AC05> { [     i,          I,   dead_circumflex, asciicircum ] };
+    key <AC06> { [     d,          D, partialderivative, Icircumflex ] };
+    key <AC07> { [     h,          H,          abovedot,      Oacute ] };
+    key <AC08> { [     t,          T,            dagger,       caron ] };
+    key <AC09> { [     n,          N,        dead_tilde,  asciitilde ] };
+    key <AC10> { [     s,          S,            ssharp,      Iacute ] };
+    key <AC11> { [ minus, underscore,            endash,      emdash ] };
+
+    key <LSGT> { [ section, plusminus ] };
+    key <AB01> { [ semicolon, colon,       ellipsis,             Uacute ] };
+    key <AB02> { [         q,     Q,             oe,                 OE ] };
+    key <AB03> { [         j,     J,          U2206,        Ocircumflex ] };
+    key <AB04> { [         k,     K, dead_abovering,              UF8FF ] };
+    key <AB05> { [         x,     X,          U2248,             ogonek ] };
+    key <AB06> { [         b,     B,       integral,           idotless ] };
+    key <AB07> { [         m,     M,             mu,        Acircumflex ] };
+    key <AB08> { [         w,     W,          U2211, doublelowquotemark ] };
+    key <AB09> { [         v,     V,     squareroot,              U25CA ] };
+    key <AB10> { [         z,     Z,    Greek_OMEGA,            cedilla ] };
 
-// level3 modifier is a shortcut to the "us" meaning of the keys where
-// we place cyrillic letters, handy for accessing the corresponding
-// punctuation marks.
-// It is important to have access to punctuation marks, and the rest of
-// alphabetical keys are added for being consequent so that the users
-// can expect the level3 modifier to give what the key label shows.
+    key <BKSL> { [ backslash, bar, guillemotleft, guillemotright ] };
+
+    include "level3(ralt_switch)"
+};
 
+// A phonetic layout for typing Russian on a US keyboard.
+// Originally by Ivan Popov <pin@konvalo.org>, 2005.
+// (The punctuation symbols that are displaced by Cyrillic letters
+// have been put on levels 3 and 4, reachable with AltGr.)
 partial alphanumeric_keys
 xkb_symbols "rus" {
 
     include "us(basic)"
+
     name[Group1]= "Russian (US, phonetic)";
 
-key.type[group1]="FOUR_LEVEL_ALPHABETIC";
+    key <TLDE>	{[ Cyrillic_io,       Cyrillic_IO,        grave,  asciitilde ]};
+    key <AE12>	{[ Cyrillic_hardsign, Cyrillic_HARDSIGN,  equal,  plus       ]};
 
-    key	<LatA> {	[ Cyrillic_a, Cyrillic_A ]	};
-    key	<LatB> {	[ Cyrillic_be, Cyrillic_BE ]	};
-    key	<LatW> {	[ Cyrillic_ve, Cyrillic_VE ]	};
-    key	<LatG> {	[ Cyrillic_ghe, Cyrillic_GHE ]	};
-    key	<LatD> {	[ Cyrillic_de, Cyrillic_DE ]	};
-    key	<LatE> {	[ Cyrillic_ie, Cyrillic_IE ]	};
-    key	<TLDE> {	[ Cyrillic_io, Cyrillic_IO, grave, asciitilde ] };
-    key	<LatV> {	[ Cyrillic_zhe, Cyrillic_ZHE ]	};
-    key	<LatZ> {	[ Cyrillic_ze, Cyrillic_ZE ]	};
-    key	<LatI> {	[ Cyrillic_i, Cyrillic_I ]	};
-    key	<LatJ> {	[ Cyrillic_shorti, Cyrillic_SHORTI ]	};
-    key	<LatK> {	[ Cyrillic_ka, Cyrillic_KA ]	};
-    key	<LatL> {	[ Cyrillic_el, Cyrillic_EL ]	};
-    key	<LatM> {	[ Cyrillic_em, Cyrillic_EM ]	};
-    key	<LatN> {	[ Cyrillic_en, Cyrillic_EN ]	};
-    key	<LatO> {	[ Cyrillic_o, Cyrillic_O ]	};
-    key	<LatP> {	[ Cyrillic_pe, Cyrillic_PE ]	};
-    key	<LatR> {	[ Cyrillic_er, Cyrillic_ER ]	};
-    key	<LatS> {	[ Cyrillic_es, Cyrillic_ES ]	};
-    key	<LatT> {	[ Cyrillic_te, Cyrillic_TE ]	};
-    key	<LatU> {	[ Cyrillic_u, Cyrillic_U ]	};
-    key	<LatF> {	[ Cyrillic_ef, Cyrillic_EF ]	};
-    key	<LatH> {	[ Cyrillic_ha, Cyrillic_HA ]	};
-    key	<LatC> {	[ Cyrillic_tse, Cyrillic_TSE ]	};
-    key <AC10> {        [ Cyrillic_che, Cyrillic_CHE, semicolon, colon ] };
-    key	<AD11> {	[ Cyrillic_sha, Cyrillic_SHA, bracketleft, braceleft] };
-    key	<AD12> {	[ Cyrillic_shcha, Cyrillic_SHCHA, bracketright, braceright ]	};
-    key <AE12> {        [ Cyrillic_hardsign, Cyrillic_HARDSIGN, equal, plus ] };
-    key	<LatY> {	[ Cyrillic_yeru, Cyrillic_YERU ]	};
-    key	<LatX> {	[ Cyrillic_softsign, Cyrillic_SOFTSIGN ]	};
-    key	<BKSL> {	[ Cyrillic_e, Cyrillic_E, backslash, bar ]	};
-    key <AC11> {        [ Cyrillic_yu, Cyrillic_YU, apostrophe, quotedbl ] };
-    key	<LatQ> {	[ Cyrillic_ya, Cyrillic_YA ]	};
+    key <LatQ>	{[ Cyrillic_ya,       Cyrillic_YA     ]};
+    key <LatW>	{[ Cyrillic_ve,       Cyrillic_VE     ]};
+    key <AD03>	{[ Cyrillic_ie,       Cyrillic_IE     ]};
+    key <AD04>	{[ Cyrillic_er,       Cyrillic_ER     ]};
+    key <AD05>	{[ Cyrillic_te,       Cyrillic_TE     ]};
+    key <LatY>	{[ Cyrillic_yeru,     Cyrillic_YERU   ]};
+    key <AD07>	{[ Cyrillic_u,        Cyrillic_U      ]};
+    key <AD08>	{[ Cyrillic_i,        Cyrillic_I      ]};
+    key <AD09>	{[ Cyrillic_o,        Cyrillic_O      ]};
+    key <AD10>	{[ Cyrillic_pe,       Cyrillic_PE     ]};
+    key <AD11>	{[ Cyrillic_sha,      Cyrillic_SHA,       bracketleft,  braceleft  ]};
+    key <AD12>	{[ Cyrillic_shcha,    Cyrillic_SHCHA,     bracketright, braceright ]};
+
+    key <LatA>	{[ Cyrillic_a,        Cyrillic_A      ]};
+    key <AC02>	{[ Cyrillic_es,       Cyrillic_ES     ]};
+    key <AC03>	{[ Cyrillic_de,       Cyrillic_DE     ]};
+    key <AC04>	{[ Cyrillic_ef,       Cyrillic_EF     ]};
+    key <AC05>	{[ Cyrillic_ghe,      Cyrillic_GHE    ]};
+    key <AC06>	{[ Cyrillic_ha,       Cyrillic_HA     ]};
+    key <AC07>	{[ Cyrillic_shorti,   Cyrillic_SHORTI ]};
+    key <AC08>	{[ Cyrillic_ka,       Cyrillic_KA     ]};
+    key <AC09>	{[ Cyrillic_el,       Cyrillic_EL     ]};
+    key <AC10>	{[ Cyrillic_che,      Cyrillic_CHE,       semicolon,  colon    ]};
+    key <AC11>	{[ Cyrillic_yu,       Cyrillic_YU,        apostrophe, quotedbl ]};
+    key <BKSL>	{[ Cyrillic_e,        Cyrillic_E,         backslash,  bar      ]};
+
+    key <LatZ>	{[ Cyrillic_ze,       Cyrillic_ZE     ]};
+    key <AB02>	{[ Cyrillic_softsign, Cyrillic_SOFTSIGN ]};
+    key <AB03>	{[ Cyrillic_tse,      Cyrillic_TSE    ]};
+    key <AB04>	{[ Cyrillic_zhe,      Cyrillic_ZHE    ]};
+    key <AB05>	{[ Cyrillic_be,       Cyrillic_BE     ]};
+    key <AB06>	{[ Cyrillic_en,       Cyrillic_EN     ]};
+    key <AB07>	{[ Cyrillic_em,       Cyrillic_EM     ]};
 
     include "level3(ralt_switch)"
 };
@@ -673,8 +784,8 @@
 partial alphanumeric_keys
 xkb_symbols "mac" {
 
-    include "us(basic)"
     name[Group1]= "English (Macintosh)";
+
     key.type[group1]="FOUR_LEVEL";
 
     // Slightly improvised from http://homepage.mac.com/thgewecke/kblayout.jpg
@@ -696,12 +807,12 @@
     key <AD01> { [	   q,          Q,            oe,               OE ] };
     key <AD02> { [	   w,          W,         U2211,doublelowquotemark] };
     key <AD03> { [	   e,          E,    dead_acute,            acute ] };
-    key <AD04> { [	   r,          R,    registered,            U2030 ] };
+    key <AD04> { [	   r,          R,    registered,         permille ] };
     key <AD05> { [	   t,          T,        dagger,       dead_caron ] };
     key <AD06> { [	   y,          Y,           yen,       onequarter ] };
     key <AD07> { [	   u,        U,  dead_diaeresis,        diaeresis ] };
     key <AD08> { [	   i,        I, dead_circumflex,            U02C6 ] };
-    key <AD09> { [	   o,          O,        oslash,         Ooblique ] };
+    key <AD09> { [	   o,          O,        oslash,           Oslash ] };
     key <AD10> { [	   p,          P,      Greek_pi,            U220F ] };
     key <AD11> { [ bracketleft,  braceleft, leftdoublequotemark, rightdoublequotemark ] };
     key <AD12> { [bracketright, braceright, leftsinglequotemark, rightsinglequotemark ] };
@@ -715,7 +826,6 @@
     key <AC06> { [	   h,          H, dead_abovedot,    dead_belowdot ] };
     key <AC07> { [	   j,          J,         U2206,          onehalf ] };
     key <AC08> { [	   k,          K,dead_abovering,            UF8FF ] };
-
     key <AC09> { [	   l,          L,       notsign,            THORN ] };
     key <AC10> { [ semicolon,      colon,         U2026,            thorn ] };
     key <AC11> { [apostrophe,   quotedbl,            ae,               AE ] };
@@ -741,7 +851,6 @@
 partial alphanumeric_keys
 xkb_symbols "colemak" {
 
-    include "us"
     name[Group1]= "English (Colemak)";
 
     key <TLDE> { [        grave,   asciitilde,      dead_tilde,       asciitilde ] };
@@ -761,7 +870,7 @@
     key <AD01> { [            q,            Q,      adiaeresis,       Adiaeresis ] };
     key <AD02> { [            w,            W,           aring,            Aring ] };
     key <AD03> { [            f,            F,          atilde,           Atilde ] };
-    key <AD04> { [            p,            P,          oslash,         Ooblique ] };
+    key <AD04> { [            p,            P,          oslash,           Oslash ] };
     key <AD05> { [            g,            G,     dead_ogonek,       asciitilde ] };
     key <AD06> { [            j,            J,         dstroke,          Dstroke ] };
     key <AD07> { [            l,            L,         lstroke,          Lstroke ] };
@@ -802,6 +911,111 @@
     include "level3(ralt_switch)"
 };
 
+// Colemak-DH (ANSI) symbols for xkb on X.Org Server 7.x
+// 2014-10-25 by SteveP, https://colemakmods.github.io/mod-dh/
+
+xkb_symbols "colemak_dh" {
+
+    include "us(colemak)"
+
+    name[Group1]= "English (Colemak-DH)";
+
+    key <AD05> { [            b,            B,      dead_breve,       asciitilde ] };
+
+    key <AC05> { [            g,            G,     dead_ogonek,       asciitilde ] };
+    key <AC06> { [            m,            M,     dead_macron,       asciitilde ] };
+
+    key <LSGT> { [            z,            Z,              ae,               AE ] };
+    key <AB01> { [            x,            X, dead_circumflex,       asciitilde ] };
+    key <AB02> { [            c,            C,        ccedilla,         Ccedilla ] };
+    key <AB03> { [            d,            D,  dead_diaeresis,       asciitilde ] };
+    key <AB05> { [            z,            Z,              ae,               AE ] }; //Z appears here too because <LSGT> key is not present on ANSI keyboards
+    key <AB07> { [            h,            H,      dead_caron,       asciitilde ] };
+};
+
+// Colemak-DH (Wide) symbols for xkb on X.Org Server 7.x
+// https://colemakmods.github.io/mod-dh/
+
+xkb_symbols "colemak_dh_wide" {
+
+    include "us(colemak_dh)"
+    name[Group1]= "English (Colemak-DH Wide)";
+
+    key <AE07> { [        equal,         plus,             multiply,             division ] };
+    key <AE08> { [            7,    ampersand,                  eth,                  ETH ] };
+    key <AE09> { [            8,     asterisk,                thorn,                THORN ] };
+    key <AE10> { [            9,    parenleft,  leftsinglequotemark,  leftdoublequotemark ] };
+    key <AE11> { [            0,   parenright, rightsinglequotemark, rightdoublequotemark ] };
+    key <AE12> { [        minus,   underscore,               endash,               emdash ] };
+
+    key <AD06> { [  bracketleft,    braceleft,        guillemotleft,            0x1002039 ] };
+    key <AD07> { [            j,            J,              dstroke,              Dstroke ] };
+    key <AD08> { [            l,            L,              lstroke,              Lstroke ] };
+    key <AD09> { [            u,            U,               uacute,               Uacute ] };
+    key <AD10> { [            y,            Y,           udiaeresis,           Udiaeresis ] };
+    key <AD11> { [    semicolon,        colon,           odiaeresis,           Odiaeresis ] };
+    key <AD12> { [   apostrophe,     quotedbl,               otilde,               Otilde ] };
+
+    key <AC06> { [ bracketright,   braceright,       guillemotright,            0x100203a ] };
+    key <AC07> { [            m,            M,          dead_macron,           asciitilde ] };
+    key <AC08> { [            n,            N,               ntilde,               Ntilde ] };
+    key <AC09> { [            e,            E,               eacute,               Eacute ] };
+    key <AC10> { [            i,            I,               iacute,               Iacute ] };
+    key <AC11> { [            o,            O,               oacute,               Oacute ] };
+
+    key <AB06> { [        slash,     question,         questiondown,           asciitilde ] };
+    key <AB07> { [            k,            K,       dead_abovering,           asciitilde ] };
+    key <AB08> { [            h,            H,           dead_caron,           asciitilde ] };
+    key <AB09> { [        comma,         less,         dead_cedilla,           asciitilde ] };
+    key <AB10> { [       period,      greater,        dead_abovedot,           asciitilde ] };
+    key <AB11> { [        slash,     question,         questiondown,           asciitilde ] };
+};
+
+
+// Colemak-DH (ISO) symbols for xkb on X.Org Server 7.x
+// https://colemakmods.github.io/mod-dh/
+
+xkb_symbols "colemak_dh_iso" {
+
+    include "us(colemak_dh)"
+    name[Group1]= "English (Colemak-DH ISO)";
+
+    key <BKSL> { [ numbersign, asciitilde,  backslash,       bar ] };
+
+    key <AB05> { [  backslash,        bar, asciitilde, brokenbar ] };
+};
+
+// Colemak-DH (Wide ISO) symbols for xkb on X.Org Server 7.x
+// https://colemakmods.github.io/mod-dh/
+
+xkb_symbols "colemak_dh_wide_iso" {
+
+    include "us(colemak_dh_wide)"
+    name[Group1]= "English (Colemak-DH Wide ISO)";
+
+    key <AD12> { [ numbersign, asciitilde,    backslash,        bar ] };
+    key <BKSL> { [ apostrophe,   quotedbl,       otilde,     Otilde ] };
+
+    key <AB05> { [  backslash,        bar,   asciitilde,  brokenbar ] };
+    key <AB06> { [      slash,   question, questiondown, asciitilde ] };
+};
+
+// Colemak-DH (ortholinear) symbols for xkb on X.Org Server 7.x
+// https://colemakmods.github.io/mod-dh/
+
+xkb_symbols "colemak_dh_ortho" {
+
+    include "us(colemak_dh)"
+    name[Group1]= "English (Colemak-DH Ortholinear)";
+
+    key <AB01> { [            z,            Z,              ae,               AE ] };
+    key <AB02> { [            x,            X, dead_circumflex,       asciitilde ] };
+    key <AB03> { [            c,            C,        ccedilla,         Ccedilla ] };
+    key <AB04> { [            d,            D,  dead_diaeresis,       asciitilde ] };
+    key <AB05> { [            v,            V,              oe,               OE ] };
+};
+
+
 // I do NOT like dead-keys - the International keyboard as defined by Microsoft
 // does not fit my needs. Why use two keystrokes for all simple characters (eg '
 // and <space> generates a single ') just to have an é (eacute) in two strokes
@@ -817,6 +1031,10 @@
 // became available. I added them next to ae. Because I write ediaeresis more
 // often than registered, I moved registered to be next to copyright and added
 // ediaeresis and idiaeresis. - Adriaan
+//
+// Note: there is an "altgr-weur" layout (in extras) which is no longer based on
+// the Microsoft layout, supports all chars that altgr-intl offers, but is
+// optimized for 10 Western European languages. More info: https://altgr-weur.eu
 
 partial alphanumeric_keys
 xkb_symbols "altgr-intl" {
@@ -833,9 +1051,10 @@
 
    key <AE01> { [        1, exclam,      onesuperior,  exclamdown      ] };
    key <AD04> { [        r, R,           ediaeresis,   Ediaeresis      ] };
-   key <AC07> { [        j, J,           idiaeresis,   Idiaeresis      ] };
+   key <AC04> { [        f, F,           f,            F               ] };
    key <AB02> { [        x, X,           oe,           OE              ] };
-   key <AB04> { [        v, V,           registered,   registered      ] };
+   key <AB04> { [        v, V,           registered,   trademark       ] };
+   key <AB05> { [        b, B,         periodcentered, dead_stroke     ] };
 
 // onequarter etc (not in iso8859-15) moved to get three unshifted deadkeys:
 
@@ -846,6 +1065,77 @@
    include "level3(ralt_switch)"
 };
 
+// This (altgr-weur) layout is based on combined letter frequencies
+// for English, German, Dutch, French, Spanish, Portuguese, Italian,
+// Danish, Norwegian, Swedish and Finnish: all accented characters for
+// those languages are available through AltGr- combinations. Further
+// explanation can be found at: https://www.altgr-weur.eu/
+// - Adriaan and Enno
+
+// Version info (for altgr-weur ONLY):
+// $Id: altgr-weur,v 2.0 2021/04/12 11:27:12 adriaan Exp $
+
+partial alphanumeric_keys
+xkb_symbols "altgr-weur" {
+
+   name[Group1]= "English (Western European AltGr dead keys)";
+
+   key <TLDE> { [     grave, asciitilde,      dead_grave,        dead_tilde ] };
+   key <AE01> { [         1,     exclam,      exclamdown,     dead_abovedot ] };
+   key <AE02> { [         2,         at,     twosuperior,  dead_doubleacute ] };
+   key <AE03> { [         3, numbersign,   threesuperior,       dead_macron ] };
+   key <AE04> { [         4,     dollar,            cent,               yen ] };
+   key <AE05> { [         5,    percent,        EuroSign,          sterling ] };
+   key <AE06> { [         6,asciicircum, dead_circumflex,        dead_caron ] };
+   key <AE07> { [ 7,      ampersand, doublelowquotemark, singlelowquotemark ] };
+   key <AE08> { [ 8,           asterisk,          ssharp,        dead_greek ] };
+   key <AE09> { [ 9, parenleft,   leftdoublequotemark,  leftsinglequotemark ] };
+   key <AE10> { [ 0, parenright, rightdoublequotemark, rightsinglequotemark ] };
+   key <AE11> { [     minus, underscore,          endash,            emdash ] };
+   key <AE12> { [     equal,       plus,          degree,    dead_abovering ] };
+
+   key <AD01> { [         q,          Q,           aring,             Aring ] };
+   key <AD02> { [         w,          W,              ae,                AE ] };
+   key <AD03> { [         e,          E,      ediaeresis,        Ediaeresis ] };
+   key <AD04> { [         r,          R,          egrave,            Egrave ] };
+   key <AD05> { [         t,          T,          oslash,            Oslash ] };
+   key <AD06> { [         y,          Y,          ugrave,            Ugrave ] };
+   key <AD07> { [         u,          U,      udiaeresis,        Udiaeresis ] };
+   key <AD08> { [         i,          I,      idiaeresis,        Idiaeresis ] };
+   key <AD09> { [         o,          O,      odiaeresis,        Odiaeresis ] };
+   key <AD10> { [         p,          P,          ograve,            Ograve ] };
+              // U203[9A]: single right/left-pointing angle quotation marks
+   key <AD11> { [ bracketleft, braceleft,  guillemotleft,             U2039 ] };
+   key <AD12> { [bracketright,braceright, guillemotright,             U203A ] };
+
+   key <AC01> { [         a,          A,      adiaeresis,        Adiaeresis ] };
+   key <AC02> { [         s,          S,          agrave,            Agrave ] };
+   key <AC03> { [         d,          D,          eacute,            Eacute ] };
+   key <AC04> { [         f,          F,     ecircumflex,       Ecircumflex ] };
+   key <AC05> { [         g,          G,     icircumflex,       Icircumflex ] };
+   key <AC06> { [         h,          H,     ucircumflex,       Ucircumflex ] };
+   key <AC07> { [         j,          J,          uacute,            Uacute ] };
+   key <AC08> { [         k,          K,          iacute,            Iacute ] };
+   key <AC09> { [         l,          L,          oacute,            Oacute ] };
+   key <AC10> { [ semicolon,      colon,     ocircumflex,       Ocircumflex ] };
+   key <AC11> { [apostrophe,   quotedbl,      dead_acute,    dead_diaeresis ] };
+
+   key <AB01> { [         z,          Z,          aacute,            Aacute ] };
+   key <AB02> { [         x,          X,     acircumflex,       Acircumflex ] };
+   key <AB03> { [         c,          C,        ccedilla,          Ccedilla ] };
+   key <AB04> { [         v,          V,          atilde,            Atilde ] };
+   key <AB05> { [         b,          B,          otilde,            Otilde ] };
+   key <AB06> { [         n,          N,          ntilde,            Ntilde ] };
+   key <AB07> { [         m,          M,          igrave,            Igrave ] };
+   key <AB08> { [     comma,       less,    dead_cedilla,       dead_ogonek ] };
+   key <AB09> { [    period,    greater,              oe,                OE ] };
+   key <AB10> { [     slash,   question,    questiondown,       dead_stroke ] };
+              //                             ij ligature        IJ ligature
+   key <BKSL> { [ backslash,        bar,           U0133,             U0132 ] };
+
+   include "level3(ralt_switch)"
+};
+
 // Intel ClassmatePC Keyboard Layout
 // by Piter PUNK <piterpk@terra.com.br>
 //
@@ -856,6 +1146,7 @@
 // classmate - us(basic)
 partial alphanumeric_keys
 xkb_symbols "classmate" {
+    // #HW-SPECIFIC
     include "us(basic)"
     name[Group1]= "English (US)";
 
@@ -866,130 +1157,99 @@
 };
 
 // classmate-intl - us(intl)
-// RCTL is generated by Fn+Alt, because that, when trying to access
-// the level3 symbols at 7,8,9,0,u,i,o,p,j,k,l,;,m,. and / we got
+// RCTL is generated by Fn+Alt, because of that, when trying to access
+// the level3 symbols at 7,8,9,0, u,i,o,p, j,k,l,;, and m,.,/, we get
 // the keypad keycodes. The keypad is changed to make Fn+Alt+<KP_key>
 // generate the same symbol as the original key.
 partial alphanumeric_keys
 xkb_symbols "classmate-intl" {
+    // #HW-SPECIFIC
     include "us(intl)"
-    name[Group1]= "USA - ClassmatePC (International)";
+    name[Group1]= "English (US)";
     key.type[Group1]="FOUR_LEVEL";
 
-    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };
+    key <LSGT> { [ backslash,   bar,         backslash,            bar            ] };
 
-    key <KP7>  { [	KP_Home,		KP_7,
-			onehalf,		dead_horn	] };
-    key <KP8>  { [	KP_Up,			KP_8,
-			threequarters,		dead_ogonek	] };
-    key <KP9>  { [	KP_Prior,		KP_9,
-			leftsinglequotemark,	dead_breve	] };
-    key <KPMU> { [ 	KP_Multiply,		KP_Multiply,
-			rightsinglequotemark,	dead_abovering	] };
-
-    key <KP4>  { [	KP_Left,		KP_4,
-			uacute,			Uacute		] };
-    key <KP5>  { [	KP_Begin,		KP_5,
-			iacute,			Iacute		] };
-    key <KP6>  { [	KP_Right,		KP_6,
-			oacute,			Oacute		] };
-    key <KPSU> { [	KP_Subtract,		KP_Subtract,
-			odiaeresis,		Odiaeresis	] };
-
-    key <KP2>  { [	KP_Down,		KP_2,
-			oe,			OE		] };
-    key <KP3>  { [	KP_Next,		KP_3,
-			oslash,			Ooblique	] };
-    key <KPAD> { [ 	KP_Add,     		KP_Add,
-			paragraph,		degree          ] };
-
-    key <KP0>  { [	KP_Insert,		KP_0,
-			mu,			mu	] };
-    key <KPDL> { [	KP_Delete,		KP_Decimal,
-			dead_abovedot,		dead_caron	] };
-    key <KPDV> { [ 	KP_Divide,   		KP_Divide,
-			questiondown,		dead_hook       ] };
+    key <KP7>  { [ KP_Home,     KP_7,        onehalf,              dead_horn      ] };
+    key <KP8>  { [ KP_Up,       KP_8,        threequarters,        dead_ogonek    ] };
+    key <KP9>  { [ KP_Prior,    KP_9,        leftsinglequotemark,  dead_breve     ] };
+    key <KPMU> { [ KP_Multiply, KP_Multiply, rightsinglequotemark, dead_abovering ] };
+
+    key <KP4>  { [ KP_Left,     KP_4,        uacute,               Uacute         ] };
+    key <KP5>  { [ KP_Begin,    KP_5,        iacute,               Iacute         ] };
+    key <KP6>  { [ KP_Right,    KP_6,        oacute,               Oacute         ] };
+    key <KPSU> { [ KP_Subtract, KP_Subtract, odiaeresis,           Odiaeresis     ] };
+
+    key <KP2>  { [ KP_Down,     KP_2,        oe,                   OE             ] };
+    key <KP3>  { [ KP_Next,     KP_3,        oslash,               Oslash         ] };
+    key <KPAD> { [ KP_Add,      KP_Add,      paragraph,            degree         ] };
+
+    key <KP0>  { [ KP_Insert,   KP_0,        mu,                   mu             ] };
+    key <KPDL> { [ KP_Delete,   KP_Decimal,  dead_abovedot,        dead_caron     ] };
+    key <KPDV> { [ KP_Divide,   KP_Divide,   questiondown,         dead_hook      ] };
 
     include "level3(switch)"
 };
 
 // classmate-alt-intl - us(alt-intl)
-// RCTL is generated by Fn+Alt, because that, when trying to access
-// the level3 symbols at 7,8,9,0,u,i,o,p,j,k,l,;,m,. and / we got
+// RCTL is generated by Fn+Alt, because of that, when trying to access
+// the level3 symbols at 7,8,9,0, u,i,o,p, j,k,l,;, and m,.,/, we get
 // the keypad keycodes. The keypad is changed to make Fn+Alt+<KP_key>
 // generate the same symbol as the original key.
 partial alphanumeric_keys
 xkb_symbols "classmate-alt-intl" {
+    // #HW-SPECIFIC
     include "us(alt-intl)"
-    name[Group1]= "USA - ClassmatePC (Alternative international)";
+    name[Group1]= "English (US)";
     key.type[Group1]="FOUR_LEVEL";
 
-    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };
+    key <LSGT> { [ backslash,   bar,         backslash,            bar            ] };
+
+    key <KPSU> { [ KP_Subtract, KP_Subtract  ] };
+
+    key <KP9>  { [ KP_Prior,    KP_9,        leftsinglequotemark,  dead_breve     ] };
+    key <KPMU> { [ KP_Multiply, KP_Multiply, rightsinglequotemark, dead_abovering ] };
 
-    key <KPSU> { [	KP_Subtract,		KP_Subtract	] };
+    key <KPAD> { [ KP_Add,      KP_Add,      dead_ogonek,          dead_diaeresis ] };
 
-    key <KP9>  { [	KP_Prior,		KP_9,
-			leftsinglequotemark,	dead_breve	] };
-    key <KPMU> { [ 	KP_Multiply,		KP_Multiply,
-			rightsinglequotemark,	dead_abovering	] };
-
-    key <KPAD> { [ 	KP_Add,     		KP_Add,
-			dead_ogonek,		dead_diaeresis   ] };
-
-    key <KPDL> { [	KP_Delete,		KP_Decimal,
-			dead_abovedot,		dead_circumflex	] };
-    key <KPDV> { [ 	KP_Divide,   		KP_Divide,
-			dead_hook,		dead_hook       ] };
+    key <KPDL> { [ KP_Delete,   KP_Decimal,  dead_abovedot,        dead_circumflex] };
+    key <KPDV> { [ KP_Divide,   KP_Divide,   dead_hook,            dead_hook      ] };
 
     include "level3(switch)"
 };
 
 // classmate-altgr-intl - us(altgr-intl)
-// RCTL is generated by Fn+Alt, because that, when trying to access
-// the level3 symbols at 7,8,9,0,u,i,o,p,j,k,l,;,m,. and / we got
+// RCTL is generated by Fn+Alt, because of that, when trying to access
+// the level3 symbols at 7,8,9,0, u,i,o,p, j,k,l,;, and m,.,/, we get
 // the keypad keycodes. The keypad is changed to make Fn+Alt+<KP_key>
 // generate the same symbol as the original key.
 partial alphanumeric_keys
 xkb_symbols "classmate-altgr-intl" {
+    // #HW-SPECIFIC
     include "us(altgr-intl)"
-    name[Group1]= "USA - ClassmatePC (International Fn+Alt dead-keys)";
+    name[Group1]= "English (US)";
     key.type[Group1]="FOUR_LEVEL";
 
-    key <LSGT> { [ backslash,	bar,		backslash,	bar ] };
+    key <LSGT> { [ backslash,   bar,         backslash,            bar            ] };
 
-    key <KP7>  { [	KP_Home,		KP_7,
-			dead_horn,		dead_horn	] };
-    key <KP8>  { [	KP_Up,			KP_8,
-			dead_ogonek,		dead_ogonek	] };
-    key <KP9>  { [	KP_Prior,		KP_9,
-			leftsinglequotemark,	dead_breve	] };
-    key <KPMU> { [ 	KP_Multiply,		KP_Multiply,
-			rightsinglequotemark,	dead_abovering	] };
-
-    key <KP4>  { [	KP_Left,		KP_4,
-			uacute,			Uacute		] };
-    key <KP5>  { [	KP_Begin,		KP_5,
-			iacute,			Iacute		] };
-    key <KP6>  { [	KP_Right,		KP_6,
-			oacute,			Oacute		] };
-    key <KPSU> { [	KP_Subtract,		KP_Subtract,
-			odiaeresis,		Odiaeresis	] };
-
-    key <KP1>  { [	KP_End,			KP_1,
-			idiaeresis,		Idiaeresis	] };
-    key <KP2>  { [	KP_Down,		KP_2,
-			oe,			OE		] };
-    key <KP3>  { [	KP_Next,		KP_3,
-			oslash,			Ooblique	] };
-    key <KPAD> { [ 	KP_Add,     		KP_Add,
-			paragraph,		degree          ] };
-
-    key <KP0>  { [	KP_Insert,		KP_0,
-			mu,			mu	] };
-    key <KPDL> { [	KP_Delete,		KP_Decimal,
-			dead_abovedot,		dead_caron	] };
-    key <KPDV> { [ 	KP_Divide,   		KP_Divide,
-			questiondown,		dead_hook       ] };
+    key <KP7>  { [ KP_Home,     KP_7,        dead_horn,            dead_horn      ] };
+    key <KP8>  { [ KP_Up,       KP_8,        dead_ogonek,          dead_ogonek    ] };
+    key <KP9>  { [ KP_Prior,    KP_9,        leftsinglequotemark,  dead_breve     ] };
+    key <KPMU> { [ KP_Multiply, KP_Multiply, rightsinglequotemark, dead_abovering ] };
+
+    key <KP4>  { [ KP_Left,     KP_4,        uacute,               Uacute         ] };
+    key <KP5>  { [ KP_Begin,    KP_5,        iacute,               Iacute         ] };
+    key <KP6>  { [ KP_Right,    KP_6,        oacute,               Oacute         ] };
+    key <KPSU> { [ KP_Subtract, KP_Subtract, odiaeresis,           Odiaeresis     ] };
+
+    key <KP1>  { [ KP_End,      KP_1,        idiaeresis,           Idiaeresis     ] };
+    key <KP2>  { [ KP_Down,     KP_2,        oe,                   OE             ] };
+    key <KP3>  { [ KP_Next,     KP_3,        oslash,               Oslash         ] };
+    key <KPAD> { [ KP_Add,      KP_Add,      paragraph,            degree         ] };
+
+    key <KP0>  { [ KP_Insert,   KP_0,        mu,                   mu             ] };
+    key <KPDL> { [ KP_Delete,   KP_Decimal,  dead_abovedot,        dead_caron     ] };
+    key <KPDV> { [ KP_Divide,   KP_Divide,   questiondown,         dead_hook      ] };
 
     include "level3(switch)"
 };
@@ -997,6 +1257,8 @@
 partial alphanumeric_keys
 xkb_symbols "olpc" {
 
+   // #HW-SPECIFIC
+
    include "us(basic)"
    name[Group1]= "English (US)";
 
@@ -1056,12 +1318,14 @@
 partial alphanumeric_keys
 xkb_symbols "olpc2" {
    include "us(olpc)"
-   name[Group1]= "English (the divide/multiply keys toggle the layout)";
+   name[Group1]= "English (the divide/multiply toggle the layout)";
    include "group(olpc)"
 };
 
 xkb_symbols "olpcm" {
 
+   // #HW-SPECIFIC
+
    include "us(basic)"
    name[Group1]= "English (US)";
 
@@ -1178,6 +1442,31 @@
     key <AB10> { [      U13C2,      U13C9 ] };
 };
 
+// Add Hawaiian `okina and kahako to US layout
+// Author: Greg Meyer <gregory.meyer@gmail.com>, 2020
+// this mapping follows the one for Windows here: http://www.olelo.hawaii.edu/enehana/winkbd.php
+// `okina replaces apostrophe (apostrophe moves to level 3)
+// vowels with kahako (macron) are level 3 symbols
+partial alphanumeric_keys
+xkb_symbols "haw"  {
+
+    include "us(basic)"
+    name[Group1] = "Hawaiian";
+
+    // `okina replaces single apostrophe
+    // alt gives the literal apostrophe
+    key <AC11> {[ U02BB, quotedbl, apostrophe ] };
+
+    // kahako
+    key <AC01> {[ a, A, amacron, Amacron ]};
+    key <AD03> {[ e, E, emacron, Emacron ]};
+    key <AD07> {[ u, U, umacron, Umacron ]};
+    key <AD08> {[ i, I, imacron, Imacron ]};
+    key <AD09> {[ o, O, omacron, Omacron ]};
+
+    include "level3(ralt_switch)"
+};
+
 // Serbian charecters added as third level symbols to US keyboard layout.
 
 partial alphanumeric_keys
@@ -1190,9 +1479,9 @@
   key <AE06> { [ 6, dead_caron, asciicircum, asciicircum ] };
   key <AE08> { [ 8, asterisk, multiply, division ] };
   key <AE11> { [ minus, underscore, endash, emdash ] };
-  key <AC09> { [ l, L, U1C9, U1C8 ] };
-  key <AB06> { [ n, N, U1CC, U1CB ] };
-  key <AB01> { [ z, Z, U1C6, U1C5 ] };
+  key <AC09> { [ l, L, U01C9, U01C8 ] }; // ǉ ǈ
+  key <AB06> { [ n, N, U01CC, U01CB ] }; // ǌ ǋ
+  key <AB01> { [ z, Z, U01C6, U01C5 ] }; // ǆ ǅ
   key <AD03> { [ e, E, EuroSign, cent ] };
   key <AC03> { [ d, D, dstroke, Dstroke ] };
   key <AC11> { [ dead_acute, quotedbl, apostrophe, apostrophe ] };
@@ -1242,9 +1531,7 @@
     key <AB06> {  [   k,  K   ] };
     key <AB07> {  [   l,  L   ] };
 
-    key <CAPS> { [    BackSpace,       Escape,       BackSpace,        BackSpace ] };
-
-    include "level3(ralt_switch)"
+    key <CAPS> {  [   BackSpace,  Escape  ] };
 };
 
 partial alphanumeric_keys
@@ -1255,11 +1542,11 @@
 
     key <AD01> { [     q,          Q,    adiaeresis,       Adiaeresis ] };
     key <AD02> { [     d,          D,           eth,              ETH ] };
-    key <AD03> { [     r,          R,    registered,       registered ] };
+    key <AD03> { [     r,          R,    registered,        trademark ] };
     key <AD04> { [     w,          W,         aring,            Aring ] };
     key <AD05> { [     b,          B,             b,                B ] };
-    key <AD06> { [     j,          J,             j,                J ] };
-    key <AD07> { [     f,          F,             f,                F ] };
+    key <AD06> { [     j,          J,    idiaeresis,       Idiaeresis ] };
+    key <AD07> { [     f,          F,    ediaeresis,       Ediaeresis ] };
     key <AD08> { [     u,          U,        uacute,           Uacute ] };
     key <AD09> { [     p,          P,    odiaeresis,       Odiaeresis ] };
     key <AD10> { [ semicolon,  colon,     paragraph,           degree ] };
@@ -1276,18 +1563,37 @@
     key <AC10> { [     i,          I,        iacute,           Iacute ] };
 
     key <AB01> { [     z,          Z,            ae,               AE ] };
-    key <AB02> { [     x,          X,             x,                X ] };
-    key <AB03> { [     m,          M,            mu,               mu ] };
+    key <AB02> { [     x,          X, periodcentered,     dead_stroke ] };
+    key <AB03> { [     m,          M,            mu,        plusminus ] };
     key <AB04> { [     c,          C,     copyright,             cent ] };
     key <AB05> { [     v,          V,             v,                V ] };
     key <AB06> { [     k,          K,            oe,               OE ] };
-    key <AB07> { [     l,          L,        oslash,         Ooblique ] };
+    key <AB07> { [     l,          L,        oslash,           Oslash ] };
 
     key <CAPS> { [ BackSpace, Escape,     BackSpace,        BackSpace ] };
 
     include "level3(ralt_switch)"
 };
 
+// US Workman-P layout based on US Workman with top row digits switched only
+// US Workman layout site: https://workmanlayout.org
+partial alphanumeric_keys
+xkb_symbols "workman-p" {
+    include "us(workman)"
+    name[Group1]= "English (Workman-P)";
+
+    key <AE01> { [ exclam,      1 ] };
+    key <AE02> { [ at,          2 ] };
+    key <AE03> { [ numbersign,  3 ] };
+    key <AE04> { [ dollar,      4 ] };
+    key <AE05> { [ percent,     5 ] };
+    key <AE06> { [ asciicircum, 6 ] };
+    key <AE07> { [ ampersand,   7 ] };
+    key <AE08> { [ asterisk,    8 ] };
+    key <AE09> { [ parenleft,   9 ] };
+    key <AE10> { [ parenright,  0 ] };
+};
+
 // Norman keyboard layout symbols for xkb on X.Org Server 7.x
 // Written 11/23/2012, revised 3/7/2013 by David Norman http://normanlayout.info
 // To the extent possible under law, the author(s) have dedicated all
@@ -1404,7 +1710,6 @@
 partial alphanumeric_keys
 xkb_symbols "carpalx-intl" {
 
-    include "us(carpalx)"
     name[Group1]= "English (Carpalx, intl., with dead keys)";
 
     key <TLDE> { [dead_grave, dead_tilde,         grave,       asciitilde ] };
@@ -1423,14 +1728,14 @@
 
     key <AD01> { [	   q,          Q,        degree,        paragraph ] };
     key <AD02> { [	   g,          G,         U011F,            U011E ] };
-    key <AD03> { [	   m,          M,            mu,               mu ] };
+    key <AD03> { [	   m,          M,            mu,        plusminus ] };
     key <AD04> { [	   l,          L,     copyright,             cent ] };
     key <AD05> { [	   w,          W,             w,                W ] };
     key <AD06> { [	   y,          Y,    idiaeresis,       Idiaeresis ] };
     key <AD07> { [	   f,          F,    adiaeresis,       Adiaeresis ] };
     key <AD08> { [	   u,          U,    udiaeresis,       Udiaeresis ] };
     key <AD09> { [	   b,          B,    odiaeresis,       Odiaeresis ] };
-    key <AD10> { [ semicolon,      colon,        oslash,         Ooblique ] };
+    key <AD10> { [ semicolon,      colon,        oslash,           Oslash ] };
     key <AD11> { [ bracketleft,  braceleft,  guillemotleft, leftdoublequotemark ] };
     key <AD12> { [bracketright, braceright, guillemotright, rightdoublequotemark ] };
 
@@ -1438,7 +1743,7 @@
     key <AC02> { [	   s,          S,        ssharp,          section ] };
     key <AC03> { [	   t,          T,         thorn,            THORN ] };
     key <AC04> { [	   n,          N,        ntilde,           Ntilde ] };
-    key <AC05> { [	   r,          R,    registered,       registered ] };
+    key <AC05> { [	   r,          R,    registered,        trademark ] };
     key <AC06> { [	   i,          I,        iacute,           Iacute ] };
     key <AC07> { [	   a,          A,        aacute,           Aacute ] };
     key <AC08> { [	   e,          E,        eacute,           Eacute ] };
@@ -1446,7 +1751,7 @@
     key <AC10> { [	   h,          H,        uacute,           Uacute ] };
     key <AC11> { [dead_acute, dead_diaeresis, apostrophe,        quotedbl ] };
 
-    key <AB01> { [	   z,          Z,             z,                Z ] };
+    key <AB01> { [	   z,          Z, periodcentered,     dead_stroke ] };
     key <AB02> { [	   x,          X,         U015F,            U015E ] };
     key <AB03> { [	   c,          C,      ccedilla,         Ccedilla ] };
     key <AB04> { [	   v,          V,            ae,               AE ] };
@@ -1474,17 +1779,11 @@
    include "us(carpalx-intl)"
    name[Group1]= "English (Carpalx, intl., with AltGr dead keys)";
 
-// five dead keys moved into level3:
-
    key <TLDE> { [    grave, asciitilde,  dead_grave,   dead_tilde      ] };
    key <AC11> { [apostrophe,quotedbl,    dead_acute,   dead_diaeresis  ] };
 
-// diversions from the MS Intl keyboard:
-
    key <AE01> { [        1, exclam,      onesuperior,  exclamdown      ] };
 
-// onequarter etc (not in iso8859-15) moved to get three unshifted deadkeys:
-
    key <AE06> { [        6, asciicircum, dead_circumflex, onequarter    ] };
    key <AE07> { [        7, ampersand,   dead_horn,       onehalf       ] };
    key <AE08> { [        8, asterisk,    dead_ogonek,     threequarters ] };
@@ -1547,6 +1846,73 @@
     key <AB04> { [	   f,          F,            ae,               AE ] };
 };
 
+// US Symbolic
+// Author: Daniele Baisero <daniele.baisero@gmail.com>
+// Based on the default keyboard map from 'symbols/us', edited for scientific literature.
+// Added simple Greek letters to alphas, and common symbols everywhere else.
+// TLDE and BKSL are AltGr-inverse, to facilitate placement of ESC over TLDE on 60% keyboards.
+// LGST (Iso Key) contains rarely used floor and ceiling brackets.
+partial alphanumeric_keys modifier_keys
+xkb_symbols "symbolic" {
+
+ name[Group1]= "English (US, Symbolic)";
+
+ key <TLDE> { [ grave, asciitilde,  backslash,     bar            ] }; // ` ~ \ |
+ key <AE01> { [ 1,     exclam,      onesuperior,   notsign        ] }; // 1 ! ¹ ¬
+ key <AE02> { [ 2,     at,          twosuperior,   therefore      ] }; // 2 @ ² ∴
+ key <AE03> { [ 3,     numbersign,  threesuperior, sterling       ] }; // 3 # ³ £
+ key <AE04> { [ 4,     dollar,      foursuperior,  EuroSign       ] }; // 4 $ ⁴ €
+ key <AE05> { [ 5,     percent,     fivesuperior,  permille       ] }; // 5 % ⁵ ‰
+ key <AE06> { [ 6,     asciicircum, sixsuperior,   squareroot     ] }; // 6 ^ ⁶ √
+ key <AE07> { [ 7,     ampersand,   sevensuperior, section        ] }; // 7 & ⁷ §
+ key <AE08> { [ 8,     asterisk,    eightsuperior, infinity       ] }; // 8 * ⁸ ∞
+ key <AE09> { [ 9,     parenleft,   ninesuperior,  periodcentered ] }; // 9 ( ⁹ ·
+ key <AE10> { [ 0,     parenright,  zerosuperior,  degree         ] }; // 0 ) ⁰ °
+ key <AE11> { [ minus, underscore,  notequal,      plusminus      ] }; // - _ ≠ ±
+ key <AE12> { [ equal, plus,        multiply,      division       ] }; // = + × ÷
+
+ key <AD01> { [ q,            Q,          U2200,         U2203         ] }; // q Q ∀ ∃
+ key <AD02> { [ w,            W,          elementof,     notelementof  ] }; // w W ∈ ∉
+ key <AD03> { [ e,            E,          Greek_epsilon, Greek_EPSILON ] }; // e E ε Ε
+ key <AD04> { [ r,            R,          Greek_rho,     Greek_RHO     ] }; // p P ρ Ρ
+ key <AD05> { [ t,            T,          Greek_tau,     Greek_TAU     ] }; // t T τ Τ
+ key <AD06> { [ y,            Y,          Greek_upsilon, Greek_UPSILON ] }; // y Y υ Υ
+ key <AD07> { [ u,            U,          Greek_theta,   Greek_THETA   ] }; // u U θ Θ
+ key <AD08> { [ i,            I,          Greek_iota,    Greek_IOTA    ] }; // i I ι Ι
+ key <AD09> { [ o,            O,          Greek_omicron, Greek_OMICRON ] }; // o O ο Ο
+ key <AD10> { [ p,            P,          Greek_pi,      Greek_PI      ] }; // p P π Π
+ key <AD11> { [ bracketleft,  braceleft,  union,         intersection  ] }; // [ { ∪ ∩
+ key <AD12> { [ bracketright, braceright, includedin,    includes      ] }; // ] } ⊂ ⊃
+
+ key <AC01> { [ a,          A,        Greek_alpha, Greek_ALPHA ] }; // a A α Α
+ key <AC02> { [ s,          S,        Greek_sigma, Greek_SIGMA ] }; // s S σ Σ
+ key <AC03> { [ d,          D,        Greek_delta, Greek_DELTA ] }; // d D δ Δ
+ key <AC04> { [ f,          F,        Greek_phi,   Greek_PHI   ] }; // f F φ Φ
+ key <AC05> { [ g,          G,        Greek_gamma, Greek_GAMMA ] }; // g G γ Γ
+ key <AC06> { [ h,          H,        Greek_eta,   Greek_ETA   ] }; // h H η Η
+ key <AC07> { [ j,          J,        Greek_xi,    Greek_XI    ] }; // j J ξ Ξ
+ key <AC08> { [ k,          K,        Greek_kappa, Greek_KAPPA ] }; // k K κ Κ
+ key <AC09> { [ l,          L,        Greek_lamda, Greek_LAMDA ] }; // l L λ Λ
+ key <AC10> { [ semicolon,  colon,    downarrow,   uparrow     ] }; // ; : ↓ ↑
+ key <AC11> { [ apostrophe, quotedbl, rightarrow,  leftarrow   ] }; // ' " → ←
+
+ key <AB01> { [ z,      Z,        Greek_zeta,       Greek_ZETA     ] }; // z Z ζ Ζ
+ key <AB02> { [ x,      X,        Greek_chi,        Greek_CHI      ] }; // x X χ Χ
+ key <AB03> { [ c,      C,        Greek_psi,        Greek_PSI      ] }; // c C ψ Ψ
+ key <AB04> { [ v,      V,        Greek_omega,      Greek_OMEGA    ] }; // v V ω Ω
+ key <AB05> { [ b,      B,        Greek_beta,       Greek_BETA     ] }; // b B β Β
+ key <AB06> { [ n,      N,        Greek_nu,         Greek_NU       ] }; // n N ν Ν
+ key <AB07> { [ m,      M,        Greek_mu,         Greek_MU       ] }; // m M μ Μ
+ key <AB08> { [ comma,  less,     lessthanequal,    guillemotleft  ] }; // , < ≤ «
+ key <AB09> { [ period, greater,  greaterthanequal, guillemotright ] }; // . > ≥ »
+ key <AB10> { [ slash,  question, U203D,            U2766          ] }; // / ? ‽ ❦
+
+ key <BKSL> { [ backslash, bar,   grave, asciitilde ] }; // \ | ` ~
+ key <LSGT> { [ U230A,     U230B, U2308, U2309      ] }; // ⌊ ⌋ ⌈ ⌉
+
+ include "level3(ralt_switch)"
+};
+
 // EXTRAS:
 
 // Czech, Slovak and German charecters added as third level symbols to US keyboard layout.
@@ -1554,7 +1920,7 @@
 xkb_symbols "cz_sk_de" {
 
     include "us"
-    name[Group1]="Czech Slovak and German (US)";
+    name[Group1]="Czech, Slovak and German (US)";
 
     key <TLDE>  { [grave,   asciitilde, uring,      Uring       ] };
     key <AE01>	{ [    1,	exclam,	uacute,	    Uacute	] };
@@ -1597,6 +1963,76 @@
     include "level3(ralt_switch)"
 };
 
+// This is the above Jirka's us(cz_sk_de) layout variant extended with Polish, Spanish, Finnish and Swedish characters.
+// This layout variant is primarily targeted to Czech and Slovak polyglots and SW engineers (like the original above one).
+partial alphanumeric_keys
+xkb_symbols "cz_sk_pl_de_es_fi_sv" {
+
+    include "us"
+    name[Group1]="Czech, Slovak, Polish, Spanish, Finnish, Swedish and German (US)";
+
+    key <TLDE>  { [grave,   asciitilde, uring,      Uring       ] };
+    key <AE01>	{ [    1,	exclam,	uacute,	    Uacute	] };
+    key <AE02>	{ [    2,           at, ecaron,	    Ecaron	] };
+    key <AE03>	{ [    3,   numbersign, scaron,	    Scaron	] };
+    key <AE04>	{ [    4,       dollar,	ccaron,	    Ccaron	] };
+    key <AE05>	{ [    5,      percent, rcaron,	    Rcaron	] };
+    key <AE06>	{ [    6,  asciicircum, zcaron,	    Zcaron	] };
+    key <AE07>	{ [    7,    ampersand,	yacute,	    Yacute	] };
+    key <AE08>	{ [    8,     asterisk, aacute,	    Aacute	] };
+    key <AE09>	{ [    9,    parenleft,	iacute,	    Iacute	] };
+    key <AE10>	{ [    0,   parenright, eacute,	    Eacute	] };
+    key <AE11>	{ [minus,   underscore, ssharp,     0x1001E9E	] };
+    key <AE12>	{ [equal,	  plus, dead_acute, dead_caron  ] };
+
+    key <AD03>	{ [         e,          E,     EuroSign,     Eacute ]	};
+
+    key <AD11>	{ [bracketleft, braceleft,   udiaeresis,   Udiaeresis ]	};
+    key <AC10>	{ [ semicolon,      colon,   odiaeresis,   Odiaeresis ]	};
+    key <AC11>	{ [apostrophe,      quotedbl,adiaeresis,   Adiaeresis ]	};
+
+    key <AC01>	{ [         a,          A,     aacute,	     Aacute   ]	};
+    key <AD08>	{ [         i,          I,     iacute,	     Iacute   ]	};
+    key <AD09>	{ [         o,          O,     oacute,       Oacute   ]	};
+    key <AD06>	{ [         y,          Y,     yacute,       Yacute   ]	};
+    key <AD07>	{ [         u,          U,     uring,	     Uring    ]	};
+
+    key <AC02>	{ [         s,          S,     scaron,       Scaron   ]	};
+    key <AB01>	{ [         z,          Z,     zcaron,	     Zcaron   ]	};
+    key <AB03>	{ [         c,          C,     ccaron,       Ccaron   ]	};
+    key <AD04>	{ [         r,          R,     rcaron,	     Rcaron   ]	};
+    key <AD05>	{ [         t,          T,     tcaron,	     Tcaron   ]	};
+    key <AC03>	{ [         d,          D,     dcaron,	     Dcaron   ]	};
+    key <AB06>	{ [         n,          N,     ncaron,	     Ncaron   ]	};
+    key <AC09>  { [         l,          L,     lcaron,       Lcaron   ] };
+    key <AD10>  { [         p,          P,ocircumflex,  Ocircumflex   ] };
+
+    key <SPCE>  { [     space,       space, nobreakspace, nobreakspace] };
+
+    // Polish
+    key <AD01>	{ [         q,          Q,      aogonek,      Aogonek ]	};
+    key <AD02>	{ [         w,          W,      eogonek,      Eogonek ]	};
+    key <AD12>	{ [bracketright, braceright, guillemotleft, guillemotright ] };
+    key <AC04>	{ [         f,          F,       sacute,       Sacute ]	};
+    key <AC05>	{ [         g,          G,    copyright,   registered ]	};
+    key <AC06>	{ [         h,          H,         cent,    trademark ]	};
+    key <AC07>	{ [         j,          J,    plusminus,       degree ] };
+    key <AC08>	{ [         k,          K,      lstroke,      Lstroke ]	};
+    //alias <AC12> = <BKSL>;
+    key <BKSL>	{ [ backslash,        bar,        aring,      Aring   ] };
+    //Requires pc105 compatibility
+    key <LSGT>	{ [    endash,     emdash,    zabovedot,    Zabovedot ]	};
+    key <AB02>	{ [         x,          X,       zacute,       Zacute ]	};
+    key <AB04>	{ [         v,          V,       cacute,       Cacute ]	};
+    key <AB05>	{ [         b,          B,       ntilde,       Ntilde ] };
+    key <AB07>	{ [         m,          M,       nacute,       Nacute ]	};
+    key <AB08>	{ [     comma,       less,lessthanequal,     multiply ]	};
+    key <AB09>	{ [    period,    greater, greaterthanequal, division ]	};
+    key <AB10>	{ [     slash,   question,   exclamdown, questiondown ] };
+
+    include "level3(ralt_switch)"
+};
+
 // 03 December 2017 - Added us(scn), please refer to
 //                    Cadèmia Siciliana <l10n@cademiasiciliana.org>
 partial alphanumeric_keys
@@ -1605,7 +2041,7 @@
     include "us(intl)"
     name[Group1]="Sicilian (US keyboard)";
 
-    key <AD03> { [      e,       E, U0259,       U018F ] };
+    key <AD03> { [      e,       E, schwa,       SCHWA ] };
     key <AC03> { [      d,       D, U1E0D,       U1E0C ] };
     key <AC04> { [      f,       F, U0111,       U0110 ] };
     key <AC06> { [      h,       H, U1E25,       U1E24 ] };
@@ -1620,8 +2056,8 @@
 // deadkeys.  This variation does not deviate from the lame MS-style
 // US-intl layout; but it uses AltGr for combining, like altgr-intl.
 //
-// This might break your font layout layout systems (because they
-// suck), caveat emptor.  Also, most of today's software will count
+// This might break your font layout systems (because they suck),
+// caveat emptor.  Also, most of today's software will count
 // individual combining marks for selection, deletion, character
 // counting &c., and won't be smart enough to do canonical equivalence
 // when searching, &c.
@@ -1638,46 +2074,31 @@
 partial alphanumeric_keys
 xkb_symbols "intl-unicode" {
 
- name[Group1]= "English (US, international AltGr Unicode combining)";
-
  include "us(intl)"
  include "level3(ralt_switch)"
 
- // grave, tilde
- key <TLDE> { [grave, asciitilde, U0300, U0303 ] };
- // double acute
- key <AE02> { [ 2, at, twosuperior, U030B ] };
- // macron
- key <AE03> { [ 3, numbersign, threesuperior, U0304 ] };
- // circumflex
- key <AE06> { [ 6, asciicircum, onequarter, U0302 ] };
- // horn
- key <AE07> { [ 7, ampersand, onehalf, U031B ] };
- // ogonek
- key <AE08> { [ 8, asterisk, threequarters, U0328 ] };
- // breve
- key <AE09> { [	 9, parenleft, leftsinglequotemark, U0306 ] };
- // abovering
- key <AE10> { [	 0, parenright, rightsinglequotemark, U030A ] };
-
- // belowdot
- key <AE11> { [ minus, underscore, yen, U0323 ] };
- // acute, diaeresis
- key <AC11> { [apostrophe, quotedbl, U0301, U0308 ] };
- // abovedot, caron
- key <AB09> { [ period, greater, U0307, U030C ] };
- // hook
- key <AB10> { [ slash, question, questiondown, U0309 ] };
+ name[Group1]= "English (US, intl., AltGr Unicode combining)";
+
+ key <TLDE> { [ grave, asciitilde, U0300, U0303 ] }; // grave, tilde
+ key <AE02> { [ 2, at, twosuperior, U030B ] }; // double acute
+ key <AE03> { [ 3, numbersign, threesuperior, U0304 ] }; // macron
+ key <AE06> { [ 6, asciicircum, onequarter, U0302 ] }; // circumflex
+ key <AE07> { [ 7, ampersand, onehalf, U031B ] }; // horn
+ key <AE08> { [ 8, asterisk, threequarters, U0328 ] }; // ogonek
+ key <AE09> { [ 9, parenleft, leftsinglequotemark, U0306 ] }; // breve
+ key <AE10> { [ 0, parenright, rightsinglequotemark, U030A ] }; // abovering
+
+ key <AE11> { [ minus, underscore, yen, U0323 ] }; // belowdot
+ key <AC11> { [ apostrophe, quotedbl, U0301, U0308 ] }; // acute, diaeresis
+ key <AB09> { [ period, greater, U0307, U030C ] }; // abovedot, caron
+ key <AB10> { [ slash, question, questiondown, U0309 ] }; // hook
 
  // alt-intl compatibility
- // cedilla, caron
- key <AB08> { [ comma, less,	 U0327, U030C ] };
- // ogonek, diaeresis
- key <AC10> { [ semicolon, colon,	 U0328, U0308 ] };
- // doubleacute, horn
- key <AE12> { [ equal, plus,	 U030B, U031B ] };
+ key <AB08> { [ comma, less, U0327, U030C ] }; // cedilla, caron
+ key <AC10> { [ semicolon, colon, U0328, U0308 ] }; // ogonek, diaeresis
+ key <AE12> { [ equal, plus, U030B, U031B ] }; // doubleacute, horn
 
- // we don't do combining latin letters and combining enclosures
+ // We don't do combining latin letters and combining enclosures,
  // because support for those is very rare.
 };
 
@@ -1688,10 +2109,10 @@
 partial alphanumeric_keys
 xkb_symbols "alt-intl-unicode" {
 
- name[Group1]= "English (US, international AltGr Unicode combining, alternative)";
-
  include "us(intl-unicode)"
 
+ name[Group1]= "English (US, intl., AltGr Unicode combining, alt.)";
+
  // easier macron; em-dash.
  // em-dash is available via compose, but I added here since it's such
  // an important typographic character.
@@ -1699,7 +2120,6 @@
 
  // belowdot, abovedot (caron at coma/less key, per above)
  key <AB09> { [ period, greater, U0323, U0307 ] };
-
 };
 
 partial alphanumeric_keys
@@ -1740,7 +2160,7 @@
   key <AD02> { [         w,           W, U02B7, U02B7 ] };
   key <AE07> { [         7,   ampersand, U0294        ] };
   key <AD01> { [         q,           Q, U221A        ] };
-  key <AB04> { [         v,           V, U0259        ] };
+  key <AB04> { [         v,           V, schwa        ] };
   key <BKSL> { [ backslash,         bar, U026B        ] };
   key <AD03> { [         e,           E, U025B        ] };
   key <AD08> { [         i,           I, U026A        ] };
@@ -1824,8 +2244,6 @@
     key <AB07> { [ l,         L,         percent,      Greek_lambda,   7,         parenleft,  U222A,    Greek_LAMBDA ] };
     key <AB08> { [ p,         P,         backslash,    Greek_pi,       8,         parenright, U2208,    Greek_PI ] };
     key <AB09> { [ v,         V,         at,           Greek_nu,       9,         NoSymbol,   U2209,    Greek_NU ] };
-
-    include "level5(modifier_mapping)"
 };
 
 // Chromebooks typically have the key which is normally in the caps
@@ -1835,13 +2253,25 @@
 partial modifier_keys
 xkb_symbols "3l-cros" {
     include "us(3l)"
-    name[Group1] = "English (3l, chromebook)";
+    name[Group1] = "English (3l, Chromebook)";
     key <LWIN> {
         type[Group1] = "ONE_LEVEL",
         symbols[Group1] = [ Tab ]
     };
 };
 
+// A 3l variant for emacs users, which maps control to caps lock and (re)maps
+// tab back to tab.
+partial modifier_keys
+xkb_symbols "3l-emacs" {
+    include "us(3l)"
+    name[Group1] = "English (3l, emacs)";
+
+    key <TAB> { [ Tab ] };
+    key <CAPS> { [ Control_L ] };
+
+    modifier_map Control { <CAPS> };
+};
 
 // Drix EU Latin - version 3.1 (2019-10-07)
 // Author: Jerome Leclanche <jerome@leclan.ch>
@@ -1896,9 +2326,9 @@
 	key <AE12> {[ plus,        equal,          apostrophe,           notequal              ]}; // + = ' ≠
 
 	// Second row
-	key <AD01> {[ q,           Q,              oslash,               Ooblique              ]}; // q Q ø Ø
+	key <AD01> {[ q,           Q,              oslash,               Oslash                ]}; // q Q ø Ø
 	key <AD02> {[ w,           W,              w,                    uparrow               ]}; // w W w ↑
-	key <AD03> {[ e,           E,              EuroSign,             EuroS                 ]}; // e E € €
+	key <AD03> {[ e,           E,              EuroSign,             EuroSign              ]}; // e E € €
 	key <AD04> {[ r,           R,              registered,           0x10020bd             ]}; // r R ® ₽
 	key <AD05> {[ t,           T,              trademark,            Greek_tau             ]}; // t T ™ τ
 	key <AD06> {[ y,           Y,              yen,                  yen                   ]}; // y Y ¥ ¥
@@ -1920,7 +2350,7 @@
 	key <AC08> {[ k,           K,              singlelowquotemark,   doublelowquotemark    ]}; // k K ‚ „
 	key <AC09> {[ l,           L,              sterling,             Greek_lambda          ]}; // l L £ λ
 	key <AC10> {[ m,           M,              mu,                   M                     ]}; // m M µ M
-	key <AC11> {[ numbersign,  percent,        asciitilde,           0x1002030             ]}; // # % ~ ‰
+	key <AC11> {[ numbersign,  percent,        asciitilde,           permille              ]}; // # % ~ ‰
 
 	// Fourth row
 	key <LSGT> {[ less,        greater,        lessthanequal,        greaterthanequal      ]}; // < > ≤ ≥
@@ -1947,7 +2377,6 @@
 		type[Group1]="TWO_LEVEL",
 		[ ISO_Level3_Shift, Multi_key ]
 	};
-	modifier_map Mod5 { <RALT> };
 };
 
 // German and Swedish characters added as third level symbols to the US keyboard layout
@@ -1962,11 +2391,13 @@
     include "eurosign(e)"
     name[Group1] = "German, Swedish and Finnish (US)";
 
-    key <AC01> {[ a,          A,          adiaeresis, Adiaeresis ]};
-    key <AD09> {[ o,          O,          odiaeresis, Odiaeresis ]};
-    key <AC02> {[ s,          S,          ssharp,     U1E9E      ]};
-    key <AD07> {[ u,          U,          udiaeresis, Udiaeresis ]};
-    key <AD10> {[ p,          P,          aring,      Aring      ]};
+    key <AC01> {[ a,            A,          adiaeresis, Adiaeresis ]};
+    key <AC02> {[ s,            S,          ssharp,     U1E9E      ]};
+    key <AD01> {[ q,            Q,          at                     ]};
+    key <AD07> {[ u,            U,          udiaeresis, Udiaeresis ]};
+    key <AD09> {[ o,            O,          odiaeresis, Odiaeresis ]};
+    key <AD10> {[ p,            P,          aring,      Aring      ]};
+    key <AD12> {[ bracketright, braceright, asciitilde             ]};
 
     include "level3(ralt_switch)"
 };
